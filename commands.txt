git init: to initialize empty git repository

git status: to see the any modifications in the files

git log : to see all commits history

git log -n: to display most recent n commits

git log --oneline: hash_code and commit msg in one line

git log --stat: displays which files are changed and how many changes in each file

git log -p: shows the modified content in each commit(log and diff)

git diff: to see what changed in which file

git diff file_name: see the change in the particular file

git show hash_code: to see the particular commit details(what is chnged or added or removed in it)

git clone url: to clone the entire repo

git add file_name: move the changes from working tree(directory) to stanging index(changes to be committed region

git add . : to add all the files to the stanging index or to resolve the conflict by adding file to the staging index

git commit -m "message" 

git restore file_name: to restore the file to the latest head

git branch : checking list of branches and the current branch in it

git branch branch_name: creating new branch

git checkout branch_name: moving to new branch

git checkout -b branch_name: creating and moving to new branch in the same step

git commit -am "message": adding and commiting in the same step 

git merge branch_name: merging two branches(you should be on master)

git add filename: to resolve merging

git merge --abort: undoing merging

 git branch -d branch_name: deleting branch

git tag -a version1.0 f7b607fdafd882cfc89275c58de177b5fa84413f -m "version 1.0": adding tag to particular commit

git tag -d version1.0: deleting tag

git stash: to save the changes made locally to a safe place so that further can be referenced by using stash apply

git stash list: list of stashed files

git pull: to sync with the github repo or update local repo according to one at github

git stash apply: merging contents of the stashed files and that which are synced to local repo from github

git push -u origin master: to push changes to remote repo

Undoing things:

git commit --amend: to alter the most recent commit or changing message of it

git revert hash_code: reverts the commit

git reset --soft hash_code: move the head to given hash_code and delets the commits above(after) the given hash code and keeps the changes that were present in the working directory as staged files

git reset --mixed hash_code: move the head to given hash_code and delets the commits above(after) the given hash code and keeps the changes that were present in the working directory as modified files

git reset --hard hash_code:move the head to given hash_code and  delets the commits above(after) the given hash code and delete the changes that were present in the working directory

git diff HEAD~ (HEAD~ represents the hash code of the head pointed commit): to see the changes in the head pointed commit

.gitignore: create the file and add the extensions or particular file names to it so that git should ignore this file while keeping track of other files
example:
*.txt: to ignore all text files
abc.rtf: to ignore particular file
folder/*.png : to ignore png files from image folder

